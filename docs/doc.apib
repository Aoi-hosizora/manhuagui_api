FORMAT: 1A
HOST: localhost:10018/

# manhuagui-backend (1.0)

An unofficial backend for manhuagui written in golang/gin

[Aoi-hosizora - Website](https://github.com/Aoi-hosizora)

[Send email to Aoi-hosizora](mailto:aoihosizora@hotmail.com)

# Group Manga

manga-controller

## Get manga page [/v1/manga/{mid}]

### Get manga page [GET]

`GET /v1/manga/{mid}`

+ Parameters

    + mid (number, required) - manga id
        (format: int64)

+ Request (application/json)

    + Attributes

    + Headers

    + Body

+ Response 200 (application/json)

    + Attributes (_Result<MangaPageDto>)

    + Headers

    + Body

## Get manga chapter [/v1/manga/{mid}/{cid}]

### Get manga chapter [GET]

`GET /v1/manga/{mid}/{cid}`

+ Parameters

    + mid (number, required) - manga id
        (format: int64)
    + cid (number, required) - manga chapter id
        (format: int64)

+ Request (application/json)

    + Attributes

    + Headers

    + Body

+ Response 200 (application/json)

    + Attributes (_Result<MangaChapterDto>)

    + Headers

    + Body

## Get hot serial mangas [/v1/list/serial]

### Get hot serial mangas [GET]

`GET /v1/list/serial`

+ Request (application/json)

    + Attributes

    + Headers

    + Body

+ Response 200 (application/json)

    + Attributes (_Result<MangaGroupListDto>)

    + Headers

    + Body

## Get finished mangas [/v1/list/finish]

### Get finished mangas [GET]

`GET /v1/list/finish`

+ Request (application/json)

    + Attributes

    + Headers

    + Body

+ Response 200 (application/json)

    + Attributes (_Result<MangaGroupListDto>)

    + Headers

    + Body

## Get latest mangas [/v1/list/latest]

### Get latest mangas [GET]

`GET /v1/list/latest`

+ Request (application/json)

    + Attributes

    + Headers

    + Body

+ Response 200 (application/json)

    + Attributes (_Result<MangaGroupListDto>)

    + Headers

    + Body

# Data Structures

## Result (object)

+ code (number, required) - status code
    (format: int32)
+ message (string, required) - status message

## MangaPageDto (object)

+ mid (number, required) - manga id
    (format: int64)
+ mname (string, required) - manga name
+ cover (string, required) - manga cover
+ url (string, required) - manga link
+ publish_year (string, required) - manga publish year
+ alphabet_index (string, required) - manga alphabet index
+ type (string, required) - manga type
+ author_name (string, required) - manga author name
+ alias (string, required) - manga alias name
+ finished (boolean, required) - manga is finished
+ newest_chapter (string, required) - manga last update chapter
+ newest_date (string, required) - manga last update date
+ introduction (string, required) - manga introduction
+ rank (string, required) - manga rank
+ average_score (number, required) - manga average score
    (format: float)
+ score_count (number, required) - manga score count
    (format: int32)
+ per_scores (array[number], required) - manga per scores, from 0 to 5
+ groups (array[MangaChapterGroupDto], required) - manga chapter groups

## MangaChapterDto (object)

+ mid (number, required) - manga id
    (format: int64)
+ mname (string, required) - manga name
+ cid (number, required) - manga chapter id
    (format: int64)
+ cname (string, required) - manga chapter name
+ url (string, required) - manga chapter link
+ pages (array[string], required) - manga chapter pages
+ next_cid (number, required) - manga next chapter id
    (format: int64)
+ prev_cid (number, required) - manga prev chapter id
    (format: int64)

## MangaPageLinkDto (object)

+ mid (number, required) - manga id
    (format: int64)
+ mname (string, required) - manga name
+ cover (string, required) - manga cover
+ url (string, required) - manga link
+ finished (boolean, required) - manga is finished
+ newest_chapter (string, required) - manga last update chapter

## MangaChapterLinkDto (object)

+ cid (number, required) - manga chapter id
    (format: int64)
+ cname (string, required) - manga chapter name
+ page_count (number, required) - manga chapter page number
    (format: int32)
+ url (string, required) - manga chapter link
+ new (boolean, required) - manga chapter is uploaded newly

## MangaPageGroupDto (object)

+ title (string, required) - manga group title
+ mangas (array[MangaChapterLinkDto], required) - manga group mangas

## MangaChapterGroupDto (object)

+ title (string, required) - chapter group title
+ chapters (array[MangaChapterLinkDto], required) - chapter group chapters

## MangaGroupListDto (object)

+ title (string, required) - manga group title
+ top_group (MangaPageGroupDto, required) - manga top page group
+ groups (array[MangaPageGroupDto], required) - manga page groups
+ other_groups (array[MangaPageGroupDto], required) - manga other page groups

## _Result<MangaPageDto> (object)

+ code (number, required) - status code
    (format: int32)
+ message (string, required) - status message
+ data (MangaPageDto, required) - response data

## _Result<MangaChapterDto> (object)

+ code (number, required) - status code
    (format: int32)
+ message (string, required) - status message
+ data (MangaChapterDto, required) - response data

## _Result<MangaGroupListDto> (object)

+ code (number, required) - status code
    (format: int32)
+ message (string, required) - status message
+ data (MangaGroupListDto, required) - response data
